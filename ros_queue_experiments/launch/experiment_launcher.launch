<launch>
    <!-- Potential setup: all_faults_with_penalty, all_faults_without_penalty, 
        bad_prediction_model, perfect_model_and_setup, perturbation_on_action, 
        time_uncertainties, variable_time_action_setup  -->
    <arg name="experiment_setup" default="perfect_model_and_setup"/>

    <!-- Start an experiment with a non-renewal controller and no step inversion -->
    <group ns="NoRew_NoInv"> 
        <include file="$(find ros_queue_experiments)/launch/queue_system_setup_template.launch">
            <!-- Parameter for the controller setup-->
            <arg name="experiment_setup"            value="$(arg experiment_setup)"/>
            <arg name="controller_type"             value="min_drift_plus_penalty"/>
            <arg name="is_target_renewal_dependent" value="false"/>
            <arg name="inverse_control_and_steps"   value="false"/>
            <arg name="rate_or_change"              value="rate"/>
        </include>
    </group>

    <!-- Start an experiment with a renewal controller and no step inversion -->
    <group ns="Rew_NoInv"> 
        <include file="$(find ros_queue_experiments)/launch/queue_system_setup_template.launch">
            <!-- Parameter for the controller setup-->
            <arg name="experiment_setup"            value="$(arg experiment_setup)"/>
            <arg name="controller_type"             value="renewal_min_drift_plus_penalty"/>
            <arg name="is_target_renewal_dependent" value="true"/>
            <arg name="inverse_control_and_steps"   value="false"/>
            <arg name="rate_or_change"              value="change"/>
        </include>
    </group>

    <!-- Start an experiment with a non-renewal controller and step inversion -->
    <group ns="NoRew_Inv"> 
        <include file="$(find ros_queue_experiments)/launch/queue_system_setup_template.launch">
            <!-- Parameter for the controller setup-->
            <arg name="experiment_setup"            value="$(arg experiment_setup)"/>
            <arg name="controller_type"             value="min_drift_plus_penalty"/>
            <arg name="is_target_renewal_dependent" value="false"/>
            <arg name="inverse_control_and_steps"   value="true"/>
            <arg name="rate_or_change"              value="rate"/>
        </include>
    </group>

    <!-- Start an experiment with a renewal controller and step inversion -->
    <group ns="Rew_Inv"> 
        <include file="$(find ros_queue_experiments)/launch/queue_system_setup_template.launch">
            <!-- Parameter for the controller setup-->
            <arg name="experiment_setup"            value="$(arg experiment_setup)"/>
            <arg name="controller_type"             value="renewal_min_drift_plus_penalty"/>
            <arg name="is_target_renewal_dependent" value="true"/>
            <arg name="inverse_control_and_steps"   value="true"/>
            <arg name="rate_or_change"              value="change"/>
        </include>
    </group>
</launch>