<!-- Starts a queue server with queues that are fed by random Poisson distributions and controlled by a queue controller -->
<launch>
    <!-- Creates the poisson distribution services -->
    <include file="$(find ros_queue_tests)/launch/distribution_sample.launch"/>

    <!-- Creates the queue server -->
    <include file="$(find queue_server)/launch/queue_server_template.launch">
        <arg name="queue_server_config_path" value="$(find ros_queue_tests)/config/queue_server_config_tests.yaml"/>
        <arg name="server_name" value="test_queue_server"/>
    </include>

    <!-- Creates the queue controller-->
    <include file="$(find queue_controller)/launch/queue_controller_template.launch">
        <arg name="queue_controller_config_path" value="$(find ros_queue_tests)/config/min_drift-plus-penalty_poisson.yaml"/>
    </include>

    <!-- Create a service to give the potential actions. -->
    <node pkg="ros_queue_tests" type="transmission_vector_action_server" name="transmission_vector_server"/>

    <!-- Create a server that simulates arrival and departure based on potential action-->
    <node pkg="ros_queue_tests" type="prediction_server_node" name="action_prediction_server_node">
        <rosparam command="load" file="$(find ros_queue_tests)/config/prediction_servers.yaml"/>
    </node>
 
</launch>